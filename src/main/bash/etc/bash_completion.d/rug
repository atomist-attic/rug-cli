#!/bin/bash
# bash completion for rug

_rug() {
    local cur prev words cword split=false

    COMPREPLY=()
    _get_comp_words_by_ref -n := cur prev words cword

    _split_longopt && split=true

    case $prev in
        -C|--change-dir)
            _filedir -d
            return 0
            ;;
        -f|--filter)
            if [[ $cur != *= ]]; then
                COMPREPLY=( $( compgen -W "group= artifact= version=" -- "$cur" ) )
                compopt -o nospace
            fi
            return 0
            ;;
        -s|--settings)
            _filedir
            return 0
            ;;
    esac

    $split && return 0

    local global_options=(
        -? -h --help
        -X --error
        -V --verbose
        -o --offline
        -r --resolver-report
        -u --update
        -t --timer
        -s --settings
        -q --quiet
        -u --update
        --disable-verification
        --requires
    )
    local commands=(
        describe
        generate
        edit
        list
        test
        clean
        install
        publish
        extension
        search
        to path
        path
        shell
        configure
        login
    )

    local i command_re special special_index
    command_re=$(IFS='|'; echo "${commands[*]}")
    for (( i=0; i < ${#words[@]}-1; i++ )); do
        if [[ ${words[i]} == @($command_re) ]]; then
            special=${words[i]}
            special_index=$i
        elif [[ ${words[i]} == @(-h|--help|-v|--version) ]]; then
            return 0
        fi
    done

    if [[ ! $special ]]; then
        if [[ $cur == -* ]]; then
            COMPREPLY=( $( compgen -W "${global_options[*]}" -- "$cur") )
        else
            COMPREPLY=( $( compgen -W "${commands[*]}" -- "$cur") )
        fi
        return 0
    fi

    local command_options=(
        -? -h --help
        -X --error
        -V --verbose
        -o --offline
        -r --resolver-report
        -u --update
        -t --timer
       	-s --settings
       	-q --quiet
        --requires
        --disable-verification
    )
    if [[ $special == @(describe|edit|generate) ]]; then
        command_options+=( -a --archive-version )
        command_options+=( -l --local )
    fi
    if [[ $special == @(edit|generate|test|path|to path) ]]; then
       command_options+=( -C --change-dir )
    fi
    if [[ $special == edit ]]; then
        command_options+=( -d --dry-run )
    fi
    if [[ $special == @(edit|generate) ]]; then
        command_options+=( -R --repo )
        command_options+=( -I --interactive )
    fi
    if [[ $special == list ]]; then
        command_options+=( -f --filter )
    fi
    if [[ $special == generate ]]; then
        command_options+=( -F --overwrite )
    fi
    if [[ $special == configure ]]; then
        command_options+=( -g --global )
        command_options+=( -a --archive-version )
        command_options+=( -S --save )
        command_options+=( -D --delete )
    fi
    if [[ $special == publish ]]; then
        command_options+=( -i --id )
        command_options+=( -a --archive-version )
        command_options+=( --archive-artifact )
        command_options+=( --archive-group )
    fi
    if [[ $special == search ]]; then
        command_options+=( -T --tag )
        command_options+=( -O --operations )
        command_options+=( -K --type )
    fi
    if [[ $special == shell ]]; then
        command_options+=( -l --local )
    fi
    if [[ $special == repositories ]]; then
        command_options+=( --username )
        command_options+=( --mfa-code )
    fi
    if [[ $special == path ]]; then
        command_options+=( -v --values )
    fi
    if [[ $special == to-path ]]; then
        command_options+=( --kind )
        command_options+=( --line )
        command_options+=( --column )
    fi
    if [[ $special == describe ]]; then
        command_options+=( --output )
        command_options+=( -O --operations )
    fi

    local command_args=()
    local describe_args=(
        editor
        generator
        command-handler
        event-handler
        response-handler
        archive
        function
		dependencies        
    )
    local describe_re describe_arg_found=
    describe_re=$(IFS='|'; echo "${describe_args[*]}")
    if [[ $special == describe ]]; then
        for (( i=$special_index+1; i < ${#words[@]}-1; i++ )); do
            if [[ ${words[i]} == @($describe_re) ]]; then
                describe_arg_found=true
            fi
        done
        if [[ ! $describe_arg_found ]]; then
            command_args+=( "${describe_args[@]}" )
        fi
    fi

	local configure_args=(
        default archive
        respositories
    )
    local configure_args_re configure_args_arg_found=
    configure_re=$(IFS='|'; echo "${configure_args[*]}")
    if [[ $special == configure ]]; then
        for (( i=$special_index+1; i < ${#words[@]}-1; i++ )); do
            if [[ ${words[i]} == @($configure_re) ]]; then
                configure_arg_found=true
            fi
        done
        if [[ ! $configure_arg_found ]]; then
            command_args+=( "${configure_args[@]}" )
        fi
    fi

	local extension_args=(
        list
        install
        uninstall
    )
    local extension_re extension_arg_found=
    extension_re=$(IFS='|'; echo "${extension_args[*]}")
    if [[ $special == extension ]]; then
        for (( i=$special_index+1; i < ${#words[@]}-1; i++ )); do
            if [[ ${words[i]} == @($extension_re) ]]; then
                extension_arg_found=true
            fi
        done
        if [[ ! $extension_arg_found ]]; then
            command_args+=( "${extension_args[@]}" )
        fi
    fi

    if [[ $cur == -* ]]; then
        COMPREPLY=( $( compgen -W "${command_options[*]}" -- "$cur" ) )
    else
        COMPREPLY=( $( compgen -W "${command_args[*]}" -- "$cur" ) )
    fi

    return 0
}

complete -F _rug rug
