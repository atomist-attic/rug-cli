"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var mustache = require("mustache");
// NOTE: plan is that this file can act as a facade for selecting rendering style for the message
// based on some context (MappedParameter, PE etc)
var list_issues = "{\n  \"attachments\": [\n    {{#issues}}\n    {\n      \"fallback\": \"#{{number}}: {{{title}}}\",\n      {{#closed}}\n      \"footer_icon\": \"http://images.atomist.com/rug/issue-closed.png\",\n      \"color\": \"#bd2c00\",\n      {{/closed}}\n      {{^closed}}\n      \"footer_icon\": \"http://images.atomist.com/rug/issue-open.png\",\n      \"color\": \"#6cc644\",\n      {{/closed}}\n      {{#assignee}}\n      \"author_link\": \"{{{assignee.html_url}}}\",\n      \"author_name\": \"@{{{assignee.login}}}\",\n      \"author_icon\": \"{{{assignee.avatar_url}}}\",\n      {{/assignee}}\n      \"mrkdwn_in\": [\"text\"],\n      \"text\": \"<{{{issueUrl}}}|#{{number}}: {{{title}}}>\",\n      \"footer\": \"<{{{url}}}|{{{repo}}}>\",\n      \"ts\": \"{{ts}}\"\n    }{{^last}}, {{/last}}\n    {{/issues}}\n  ]\n}";
//render github issues for slack
function renderIssues(issuesList, chatSystem) {
    issuesList[issuesList.length - 1]["last"] = true; //horrible mustache hack
    try {
        return mustache.render(list_issues, { issues: issuesList,
            closed: function () {
                return this.state === "closed";
            },
            assignee: function () {
                return this.assignee !== undefined;
            }
        });
    }
    catch (ex) {
        return "Failed to render message using template: " + ex;
    }
}
exports.renderIssues = renderIssues;
var failure = "{\n  \"attachments\": [\n    {\n      \"fallback\": \"Unable to run command\",\n      \"mrkdwn_in\": [\"text\", \"pretext\"],\n      \"author_name\": \"Unable to run command\",\n      \"author_icon\": \"https://images.atomist.com/rug/error-circle.png\",\n      {{#hasCorrelationId}}\n      \"footer\": \"Correlation ID: {{{corrid}}}\",\n      {{/hasCorrelationId}}\n      \"color\": \"#D94649\",\n      \"text\" : \"{{{text}}}\"\n    }\n  ]\n}";
//generic error rendering
function renderError(msg, corrid, chatSystem) {
    try {
        return mustache.render(failure, { text: msg, corrid: corrid,
            hasCorrelationId: function () {
                return this.corrid !== undefined;
            }
        });
    }
    catch (ex) {
        return "Failed to render message using template: " + ex;
    }
}
exports.renderError = renderError;
var success = "{\n  \"attachments\": [\n    {\n      \"fallback\": \"{{{text}}}\",\n      \"mrkdwn_in\": [\"text\", \"pretext\"],\n      \"author_name\": \"Successfully ran command\",\n      \"author_icon\": \"https://images.atomist.com/rug/check-circle.gif?gif={{random}}\",\n      \"color\": \"#45B254\",\n      \"text\": \"{{{text}}}\"\n    }\n  ]\n}";
//generic success rendering
function renderSuccess(msg, chatSystem) {
    try {
        return mustache.render(success, { text: msg });
    }
    catch (ex) {
        return "Failed to render message using template: " + ex;
    }
}
exports.renderSuccess = renderSuccess;
