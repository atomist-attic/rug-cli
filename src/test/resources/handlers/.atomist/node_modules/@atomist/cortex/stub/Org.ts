/*
 * Copyright 2015-2017 Atomist Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import { GraphNode } from "@atomist/rug/tree/PathExpression";
import * as api from "../Org";
import { ChatTeam } from "./ChatTeam";
import { Repo } from "./Repo";
export { Org };

/*
 * Type Org
 * 
 * Generated class exposing Atomist Cortex.
 * Fluent builder style class for use in testing and query by example.
 */
class Org implements api.Org {

    private _has: Repo[];
    private _ownedBy: ChatTeam;
    private _owner: string;

    nodeName(): string {
        return "Org";
    }

    nodeTags(): string[] {
        return [ "Org", "-dynamic" ];
    }

    /**
      * has - Org -> Repo
      *
      * @returns {Repo[]}
      */
    has(): Repo[] {
        return this._has;
    }

    withHas(has: Repo[]): Org {
        this._has = has;
        return this;
    }

    /**
      * ownedBy - Org -> ChatTeam
      *
      * @returns {ChatTeam}
      */
    ownedBy(): ChatTeam {
        return this._ownedBy;
    }

    withOwnedBy(ownedBy: ChatTeam): Org {
        this._ownedBy = ownedBy;
        return this;
    }

    /**
      * String
      *
      * @returns {string}
      */
    owner(): string {
        return this._owner;
    }

    withOwner(owner: string): Org {
        this._owner = owner;
        return this;
    }

}   

