/*
 * Copyright 2015-2017 Atomist Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import { GraphNode } from "@atomist/rug/tree/PathExpression";
import * as api from "../Repo";
import { Build } from "./Build";
import { ChatChannel } from "./ChatChannel";
import { Issue } from "./Issue";
import { Label } from "./Label";
import { Org } from "./Org";
export { Repo };

/*
 * Type Repo
 * 
 * Generated class exposing Atomist Cortex.
 * Fluent builder style class for use in testing and query by example.
 */
class Repo implements api.Repo {

    private _channel: ChatChannel[];
    private _hasBuilds: Build[];
    private _hasIssues: Issue[];
    private _name: string;
    private _ownedBy: Org;
    private _owner: string;
    private _uses: Label[];

    nodeName(): string {
        return "Repo";
    }

    nodeTags(): string[] {
        return [ "Repo", "-dynamic" ];
    }

    /**
      * channel - Repo -> ChatChannel
      *
      * @returns {ChatChannel[]}
      */
    channel(): ChatChannel[] {
        return this._channel;
    }

    withChannel(channel: ChatChannel[]): Repo {
        this._channel = channel;
        return this;
    }

    /**
      * hasBuilds - Repo -> Build
      *
      * @returns {Build[]}
      */
    hasBuilds(): Build[] {
        return this._hasBuilds;
    }

    withHasBuilds(hasBuilds: Build[]): Repo {
        this._hasBuilds = hasBuilds;
        return this;
    }

    /**
      * hasIssues - Repo -> Issue
      *
      * @returns {Issue[]}
      */
    hasIssues(): Issue[] {
        return this._hasIssues;
    }

    withHasIssues(hasIssues: Issue[]): Repo {
        this._hasIssues = hasIssues;
        return this;
    }

    /**
      * String
      *
      * @returns {string}
      */
    name(): string {
        return this._name;
    }

    withName(name: string): Repo {
        this._name = name;
        return this;
    }

    /**
      * ownedBy - Repo -> Org
      *
      * @returns {Org}
      */
    ownedBy(): Org {
        return this._ownedBy;
    }

    withOwnedBy(ownedBy: Org): Repo {
        this._ownedBy = ownedBy;
        return this;
    }

    /**
      * String
      *
      * @returns {string}
      */
    owner(): string {
        return this._owner;
    }

    withOwner(owner: string): Repo {
        this._owner = owner;
        return this;
    }

    /**
      * uses - Repo -> Label
      *
      * @returns {Label[]}
      */
    uses(): Label[] {
        return this._uses;
    }

    withUses(uses: Label[]): Repo {
        this._uses = uses;
        return this;
    }

}   

