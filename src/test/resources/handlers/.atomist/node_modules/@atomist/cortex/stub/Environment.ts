/*
 * Copyright 2015-2017 Atomist Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import { GraphNode } from "@atomist/rug/tree/PathExpression";
import * as api from "../Environment";
import { Spec } from "./Spec";
export { Environment };

/*
 * Type Environment
 * 
 * Generated class exposing Atomist Cortex.
 * Fluent builder style class for use in testing and query by example.
 */
class Environment implements api.Environment {

    private _domainName: string;
    private _owns: Spec;

    nodeName(): string {
        return "Environment";
    }

    nodeTags(): string[] {
        return [ "Environment", "-dynamic" ];
    }

    /**
      * String
      *
      * @returns {string}
      */
    domainName(): string {
        return this._domainName;
    }

    withDomainName(domainName: string): Environment {
        this._domainName = domainName;
        return this;
    }

    /**
      * owns - Environment -> Spec
      *
      * @returns {Spec}
      */
    owns(): Spec {
        return this._owns;
    }

    withOwns(owns: Spec): Environment {
        this._owns = owns;
        return this;
    }

}   

