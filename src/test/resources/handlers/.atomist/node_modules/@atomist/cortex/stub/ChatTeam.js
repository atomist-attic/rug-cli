/*
 * Copyright 2015-2017 Atomist Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
"use strict";
/*
 * Type ChatTeam
 *
 * Generated class exposing Atomist Cortex.
 * Fluent builder style class for use in testing and query by example.
 */
var ChatTeam = (function () {
    function ChatTeam() {
    }
    ChatTeam.prototype.nodeName = function () {
        return "ChatTeam";
    };
    ChatTeam.prototype.nodeTags = function () {
        return ["ChatTeam", "-dynamic"];
    };
    /**
      * hasChannel - ChatTeam -> ChatChannel
      *
      * @returns {ChatChannel[]}
      */
    ChatTeam.prototype.hasChannel = function () {
        return this._hasChannel;
    };
    ChatTeam.prototype.withHasChannel = function (hasChannel) {
        this._hasChannel = hasChannel;
        return this;
    };
    /**
      * hasMembers - ChatTeam -> ChatId
      *
      * @returns {ChatId[]}
      */
    ChatTeam.prototype.hasMembers = function () {
        return this._hasMembers;
    };
    ChatTeam.prototype.withHasMembers = function (hasMembers) {
        this._hasMembers = hasMembers;
        return this;
    };
    /**
      * String
      *
      * @returns {string}
      */
    ChatTeam.prototype.id = function () {
        return this._id;
    };
    ChatTeam.prototype.withId = function (id) {
        this._id = id;
        return this;
    };
    /**
      * String
      *
      * @returns {string}
      */
    ChatTeam.prototype.name = function () {
        return this._name;
    };
    ChatTeam.prototype.withName = function (name) {
        this._name = name;
        return this;
    };
    /**
      * owns - ChatTeam -> Org
      *
      * @returns {Org[]}
      */
    ChatTeam.prototype.owns = function () {
        return this._owns;
    };
    ChatTeam.prototype.withOwns = function (owns) {
        this._owns = owns;
        return this;
    };
    return ChatTeam;
}());
exports.ChatTeam = ChatTeam;
