/*
 * Copyright 2015-2017 Atomist Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import { GraphNode } from "@atomist/rug/tree/PathExpression";
import * as api from "../ChatTeam";
import { ChatChannel } from "./ChatChannel";
import { ChatId } from "./ChatId";
import { Org } from "./Org";
export { ChatTeam };

/*
 * Type ChatTeam
 * 
 * Generated class exposing Atomist Cortex.
 * Fluent builder style class for use in testing and query by example.
 */
class ChatTeam implements api.ChatTeam {

    private _hasChannel: ChatChannel[];
    private _hasMembers: ChatId[];
    private _id: string;
    private _name: string;
    private _owns: Org[];

    nodeName(): string {
        return "ChatTeam";
    }

    nodeTags(): string[] {
        return [ "ChatTeam", "-dynamic" ];
    }

    /**
      * hasChannel - ChatTeam -> ChatChannel
      *
      * @returns {ChatChannel[]}
      */
    hasChannel(): ChatChannel[] {
        return this._hasChannel;
    }

    withHasChannel(hasChannel: ChatChannel[]): ChatTeam {
        this._hasChannel = hasChannel;
        return this;
    }

    /**
      * hasMembers - ChatTeam -> ChatId
      *
      * @returns {ChatId[]}
      */
    hasMembers(): ChatId[] {
        return this._hasMembers;
    }

    withHasMembers(hasMembers: ChatId[]): ChatTeam {
        this._hasMembers = hasMembers;
        return this;
    }

    /**
      * String
      *
      * @returns {string}
      */
    id(): string {
        return this._id;
    }

    withId(id: string): ChatTeam {
        this._id = id;
        return this;
    }

    /**
      * String
      *
      * @returns {string}
      */
    name(): string {
        return this._name;
    }

    withName(name: string): ChatTeam {
        this._name = name;
        return this;
    }

    /**
      * owns - ChatTeam -> Org
      *
      * @returns {Org[]}
      */
    owns(): Org[] {
        return this._owns;
    }

    withOwns(owns: Org[]): ChatTeam {
        this._owns = owns;
        return this;
    }

}   

