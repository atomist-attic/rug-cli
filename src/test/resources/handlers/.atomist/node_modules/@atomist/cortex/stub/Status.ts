/*
 * Copyright 2015-2017 Atomist Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import { GraphNode } from "@atomist/rug/tree/PathExpression";
import * as api from "../Status";
import { Commit } from "./Commit";
export { Status };

/*
 * Type Status
 * 
 * Generated class exposing Atomist Cortex.
 * Fluent builder style class for use in testing and query by example.
 */
class Status implements api.Status {

    private _description: string;
    private _on: Commit;
    private _state: string;
    private _targetUrl: string;

    nodeName(): string {
        return "Status";
    }

    nodeTags(): string[] {
        return [ "Status", "-dynamic" ];
    }

    /**
      * String
      *
      * @returns {string}
      */
    description(): string {
        return this._description;
    }

    withDescription(description: string): Status {
        this._description = description;
        return this;
    }

    /**
      * on - Status -> Commit
      *
      * @returns {Commit}
      */
    on(): Commit {
        return this._on;
    }

    withOn(on: Commit): Status {
        this._on = on;
        return this;
    }

    /**
      * String
      *
      * @returns {string}
      */
    state(): string {
        return this._state;
    }

    withState(state: string): Status {
        this._state = state;
        return this;
    }

    /**
      * String
      *
      * @returns {string}
      */
    targetUrl(): string {
        return this._targetUrl;
    }

    withTargetUrl(targetUrl: string): Status {
        this._targetUrl = targetUrl;
        return this;
    }

}   

