/*
 * Copyright 2015-2017 Atomist Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import { GraphNode } from "@atomist/rug/tree/PathExpression";
import * as api from "../ChatChannel";
import { Repo } from "./Repo";
export { ChatChannel };

/*
 * Type ChatChannel
 * 
 * Generated class exposing Atomist Cortex.
 * Fluent builder style class for use in testing and query by example.
 */
class ChatChannel implements api.ChatChannel {

    private _discusses: Repo[];
    private _id: string;
    private _name: string;

    nodeName(): string {
        return "ChatChannel";
    }

    nodeTags(): string[] {
        return [ "ChatChannel", "-dynamic" ];
    }

    /**
      * discusses - ChatChannel -> Repo
      *
      * @returns {Repo[]}
      */
    discusses(): Repo[] {
        return this._discusses;
    }

    withDiscusses(discusses: Repo[]): ChatChannel {
        this._discusses = discusses;
        return this;
    }

    /**
      * String
      *
      * @returns {string}
      */
    id(): string {
        return this._id;
    }

    withId(id: string): ChatChannel {
        this._id = id;
        return this;
    }

    /**
      * String
      *
      * @returns {string}
      */
    name(): string {
        return this._name;
    }

    withName(name: string): ChatChannel {
        this._name = name;
        return this;
    }

}   

