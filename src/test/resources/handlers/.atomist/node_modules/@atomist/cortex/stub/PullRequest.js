/*
 * Copyright 2015-2017 Atomist Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
"use strict";
/*
 * Type PullRequest
 *
 * Generated class exposing Atomist Cortex.
 * Fluent builder style class for use in testing and query by example.
 */
var PullRequest = (function () {
    function PullRequest() {
    }
    PullRequest.prototype.nodeName = function () {
        return "PullRequest";
    };
    PullRequest.prototype.nodeTags = function () {
        return ["PullRequest", "-dynamic"];
    };
    /**
      * author - PullRequest -> GitHubId
      *
      * @returns {GitHubId}
      */
    PullRequest.prototype.author = function () {
        return this._author;
    };
    PullRequest.prototype.withAuthor = function (author) {
        this._author = author;
        return this;
    };
    /**
      * base - PullRequest -> Commit
      *
      * @returns {Commit}
      */
    PullRequest.prototype.base = function () {
        return this._base;
    };
    PullRequest.prototype.withBase = function (base) {
        this._base = base;
        return this;
    };
    /**
      * String
      *
      * @returns {string}
      */
    PullRequest.prototype.body = function () {
        return this._body;
    };
    PullRequest.prototype.withBody = function (body) {
        this._body = body;
        return this;
    };
    /**
      * String
      *
      * @returns {string}
      */
    PullRequest.prototype.closedAt = function () {
        return this._closedAt;
    };
    PullRequest.prototype.withClosedAt = function (closedAt) {
        this._closedAt = closedAt;
        return this;
    };
    /**
      * contains - PullRequest -> Commit
      *
      * @returns {Commit[]}
      */
    PullRequest.prototype.contains = function () {
        return this._contains;
    };
    PullRequest.prototype.withContains = function (contains) {
        this._contains = contains;
        return this;
    };
    /**
      * String
      *
      * @returns {string}
      */
    PullRequest.prototype.createdAt = function () {
        return this._createdAt;
    };
    PullRequest.prototype.withCreatedAt = function (createdAt) {
        this._createdAt = createdAt;
        return this;
    };
    /**
      * hasComment - PullRequest -> Comment
      *
      * @returns {Comment[]}
      */
    PullRequest.prototype.hasComment = function () {
        return this._hasComment;
    };
    PullRequest.prototype.withHasComment = function (hasComment) {
        this._hasComment = hasComment;
        return this;
    };
    /**
      * head - PullRequest -> Commit
      *
      * @returns {Commit}
      */
    PullRequest.prototype.head = function () {
        return this._head;
    };
    PullRequest.prototype.withHead = function (head) {
        this._head = head;
        return this;
    };
    /**
      * boolean
      *
      * @returns {boolean}
      */
    PullRequest.prototype.merged = function () {
        return this._merged;
    };
    PullRequest.prototype.withMerged = function (merged) {
        this._merged = merged;
        return this;
    };
    /**
      * String
      *
      * @returns {string}
      */
    PullRequest.prototype.mergedAt = function () {
        return this._mergedAt;
    };
    PullRequest.prototype.withMergedAt = function (mergedAt) {
        this._mergedAt = mergedAt;
        return this;
    };
    /**
      * mergedBy - PullRequest -> GitHubId
      *
      * @returns {GitHubId}
      */
    PullRequest.prototype.mergedBy = function () {
        return this._mergedBy;
    };
    PullRequest.prototype.withMergedBy = function (mergedBy) {
        this._mergedBy = mergedBy;
        return this;
    };
    /**
      * String
      *
      * @returns {string}
      */
    PullRequest.prototype.number = function () {
        return this._number;
    };
    PullRequest.prototype.withNumber = function (number) {
        this._number = number;
        return this;
    };
    /**
      * on - PullRequest -> Repo
      *
      * @returns {Repo}
      */
    PullRequest.prototype.on = function () {
        return this._on;
    };
    PullRequest.prototype.withOn = function (on) {
        this._on = on;
        return this;
    };
    /**
      * String
      *
      * @returns {string}
      */
    PullRequest.prototype.state = function () {
        return this._state;
    };
    PullRequest.prototype.withState = function (state) {
        this._state = state;
        return this;
    };
    /**
      * String
      *
      * @returns {string}
      */
    PullRequest.prototype.timestamp = function () {
        return this._timestamp;
    };
    PullRequest.prototype.withTimestamp = function (timestamp) {
        this._timestamp = timestamp;
        return this;
    };
    /**
      * String
      *
      * @returns {string}
      */
    PullRequest.prototype.title = function () {
        return this._title;
    };
    PullRequest.prototype.withTitle = function (title) {
        this._title = title;
        return this;
    };
    /**
      * triggeredBuild - PullRequest -> Build
      *
      * @returns {Build[]}
      */
    PullRequest.prototype.triggeredBuild = function () {
        return this._triggeredBuild;
    };
    PullRequest.prototype.withTriggeredBuild = function (triggeredBuild) {
        this._triggeredBuild = triggeredBuild;
        return this;
    };
    /**
      * String
      *
      * @returns {string}
      */
    PullRequest.prototype.updatedAt = function () {
        return this._updatedAt;
    };
    PullRequest.prototype.withUpdatedAt = function (updatedAt) {
        this._updatedAt = updatedAt;
        return this;
    };
    return PullRequest;
}());
exports.PullRequest = PullRequest;
