/*
 * Copyright 2015-2017 Atomist Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import { TreeNode, GraphNode, FormatInfo, PathExpressionEngine } from "@atomist/rug/tree/PathExpression";
import { ProjectContext } from "@atomist/rug/operations/ProjectEditor";
import { Commit } from "./Commit";
import { Pipeline } from "./Pipeline";
import { PullRequest } from "./PullRequest";
import { Push } from "./Push";
import { Repo } from "./Repo";
export { Build };

/*
 * Type Build
 */
interface Build extends GraphNode {

    /**
      * String
      *
      * @returns {string}
      */
    buildUrl(): string;

    /**
      * String
      *
      * @returns {string}
      */
    compareUrl(): string;

    /**
      * String
      *
      * @returns {string}
      */
    finishedAt(): string;

    /**
      * forPipeline - Build -> Pipeline
      *
      * @returns {Pipeline}
      */
    forPipeline(): Pipeline;

    /**
      * long
      *
      * @returns {number}
      */
    id(): number;

    /**
      * String
      *
      * @returns {string}
      */
    name(): string;

    /**
      * ofCommit - Build -> Commit
      *
      * @returns {Commit}
      */
    ofCommit(): Commit;

    /**
      * on - Build -> Repo
      *
      * @returns {Repo}
      */
    on(): Repo;

    /**
      * String
      *
      * @returns {string}
      */
    platform(): string;

    /**
      * String
      *
      * @returns {string}
      */
    pullRequestNumber(): string;

    /**
      * String
      *
      * @returns {string}
      */
    startedAt(): string;

    /**
      * String
      *
      * @returns {string}
      */
    status(): string;

    /**
      * String
      *
      * @returns {string}
      */
    timestamp(): string;

    /**
      * triggeredBy - Build -> Push
      *
      * @returns {Push}
      */
    triggeredBy(): Push;

    /**
      * triggeredByPr - Build -> PullRequest
      *
      * @returns {PullRequest}
      */
    triggeredByPr(): PullRequest;

    /**
      * String
      *
      * @returns {string}
      */
    type(): string;

}   

