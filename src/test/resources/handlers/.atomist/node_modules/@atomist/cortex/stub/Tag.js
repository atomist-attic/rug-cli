/*
 * Copyright 2015-2017 Atomist Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
"use strict";
/*
 * Type Tag
 *
 * Generated class exposing Atomist Cortex.
 * Fluent builder style class for use in testing and query by example.
 */
var Tag = (function () {
    function Tag() {
    }
    Tag.prototype.nodeName = function () {
        return "Tag";
    };
    Tag.prototype.nodeTags = function () {
        return ["Tag", "-dynamic"];
    };
    /**
      * String
      *
      * @returns {string}
      */
    Tag.prototype.description = function () {
        return this._description;
    };
    Tag.prototype.withDescription = function (description) {
        this._description = description;
        return this;
    };
    /**
      * String
      *
      * @returns {string}
      */
    Tag.prototype.name = function () {
        return this._name;
    };
    Tag.prototype.withName = function (name) {
        this._name = name;
        return this;
    };
    /**
      * onCommit - Tag -> Commit
      *
      * @returns {Commit}
      */
    Tag.prototype.onCommit = function () {
        return this._onCommit;
    };
    Tag.prototype.withOnCommit = function (onCommit) {
        this._onCommit = onCommit;
        return this;
    };
    /**
      * onContainer - Tag -> Container
      *
      * @returns {Container}
      */
    Tag.prototype.onContainer = function () {
        return this._onContainer;
    };
    Tag.prototype.withOnContainer = function (onContainer) {
        this._onContainer = onContainer;
        return this;
    };
    /**
      * String
      *
      * @returns {string}
      */
    Tag.prototype.ref = function () {
        return this._ref;
    };
    Tag.prototype.withRef = function (ref) {
        this._ref = ref;
        return this;
    };
    /**
      * releasedBy - Tag -> Release
      *
      * @returns {Release}
      */
    Tag.prototype.releasedBy = function () {
        return this._releasedBy;
    };
    Tag.prototype.withReleasedBy = function (releasedBy) {
        this._releasedBy = releasedBy;
        return this;
    };
    /**
      * String
      *
      * @returns {string}
      */
    Tag.prototype.timestamp = function () {
        return this._timestamp;
    };
    Tag.prototype.withTimestamp = function (timestamp) {
        this._timestamp = timestamp;
        return this;
    };
    return Tag;
}());
exports.Tag = Tag;
