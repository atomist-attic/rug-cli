// Generated by Rug to TypeScript transpiler.

import { EditProject } from '@atomist/rug/operations/ProjectEditor'
import { PathExpressionEngine } from '@atomist/rug/tree/PathExpression'
import { Editor, Tags, Parameter } from '@atomist/rug/operations/Decorators'
import { Pattern } from '@atomist/rug/operations/RugOperation'
import { Pom, Project } from '@atomist/rug/model/Core'

/**
    AddProjectDependencyToMavenPom
    adds a project dependency to an existing Maven pom.xml
 */
@Editor("AddProjectDependencyToMavenPom", "adds a project dependency to an existing Maven pom.xml")
@Tags("maven")
class AddProjectDependencyToMavenPom implements EditProject {

    @Parameter({
        displayName: "Group ID",
        description: "Group identifier used by Maven",
        pattern: Pattern.group_id,
        validInput: "A valid Maven group ID, which starts with a letter, -, or _ and contains only alphanumeric, -, and _ characters and may having leading period separated identifiers starting with letters or underscores and containing only alphanumeric and _ characters."
    })
    group_id: string

    @Parameter({
        displayName: "Artifact ID",
        description: "Artifact identifier used by Maven",
        pattern: "^[a-z][-a-z0-9_\.]*$",
        validInput: "A valid Maven artifact ID, which starts with a lower-case letter and contains only alphanumeric, -, and _ characters"
    })
    artifact_id: string

    @Parameter({
        displayName: "Version",
        description: "Current version of the project",
        pattern: Pattern.semantic_version,
        validInput: "A valid semantic version, http://semver.org"
    })
    version: string

    edit(project: Project) {
        let eng: PathExpressionEngine = project.context().pathExpressionEngine()
        eng.with<Pom>(project, '//Pom()', p => {
            p.addOrReplaceDependencyOfVersion(this.group_id, this.artifact_id, this.version)
        })
    }
}
export let editor_addProjectDependencyToMavenPom = new AddProjectDependencyToMavenPom();