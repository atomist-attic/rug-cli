/*
 * Copyright 2015-2017 Atomist Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import { TreeNode, GraphNode, FormatInfo, PathExpressionEngine } from "@atomist/rug/tree/PathExpression";
import { ProjectContext } from "@atomist/rug/operations/ProjectEditor";
import { ViewSupport } from "./ViewSupport";
import { File } from "./File";

export { ArtifactContainer };

/*
 * ArtifactContainer
 */
interface ArtifactContainer extends ViewSupport {

    /**
      * Does a directory with the given path exist?
      * 
      * @param path {string} The path to use
      * @returns {boolean}
      */
    directoryExists(path: string): boolean;

    /**
      * Does a file with the given path exist?
      * 
      * @param path {string} The path to use
      * @returns {boolean}
      */
    fileExists(path: string): boolean;

    /**
      * Find file with the given path. Return null if not found.
      * 
      * @param path {string} Path of the file we want
      * @returns {File}
      */
    findFile(path: string): File;

    /**
      * The total number of files in this project or directory
      * 
      * @returns {number}
      */
    readonly totalFileCount: number;

}   

