/*
 * Copyright 2015-2017 Atomist Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import { TreeNode, GraphNode, FormatInfo, PathExpressionEngine } from "@atomist/rug/tree/PathExpression";
import { ProjectContext } from "@atomist/rug/operations/ProjectEditor";
import { TypeDeclarationView } from "./TypeDeclarationView";
import { CommonViewOperations } from "./CommonViewOperations";
import { MutableView } from "./MutableView";
import { JavaSource } from "./JavaSource";

export { JavaType };

/*
 * Java class
 */
interface JavaType extends TypeDeclarationView, CommonViewOperations, MutableView {

    /**
      * Does this type extend the given type?
      * 
      * @param simpleName {string} Simple name of the ancestor class we're looking for
      * @returns {boolean}
      */
    inheritsFrom(simpleName: string): boolean;

    /**
      * Is this type abstract?
      * 
      * @returns {boolean}
      */
    readonly isAbstract: boolean;

    /**
      * Is this an interface?
      * 
      * @returns {boolean}
      */
    readonly isInterface: boolean;

    /**
      * Is this an interface?
      * 
      * @returns {JavaSource}
      */
    readonly sourceFile: JavaSource;

}   

