/*
 * Copyright 2015-2017 Atomist Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import { TreeNode, GraphNode, FormatInfo, PathExpressionEngine } from "@atomist/rug/tree/PathExpression";
import { ProjectContext } from "@atomist/rug/operations/ProjectEditor";
import { Build } from "./Build";
import { Comment } from "./Comment";
import { Commit } from "./Commit";
import { GitHubId } from "./GitHubId";
import { Repo } from "./Repo";
export { PullRequest };

/*
 * Type PullRequest
 */
interface PullRequest extends GraphNode {

    /**
      * author - PullRequest -> GitHubId
      *
      * @returns {GitHubId}
      */
    author(): GitHubId;

    /**
      * base - PullRequest -> Commit
      *
      * @returns {Commit}
      */
    base(): Commit;

    /**
      * String
      *
      * @returns {string}
      */
    body(): string;

    /**
      * String
      *
      * @returns {string}
      */
    closedAt(): string;

    /**
      * contains - PullRequest -> Commit
      *
      * @returns {Commit[]}
      */
    contains(): Commit[];

    /**
      * String
      *
      * @returns {string}
      */
    createdAt(): string;

    /**
      * hasComment - PullRequest -> Comment
      *
      * @returns {Comment[]}
      */
    hasComment(): Comment[];

    /**
      * head - PullRequest -> Commit
      *
      * @returns {Commit}
      */
    head(): Commit;

    /**
      * boolean
      *
      * @returns {boolean}
      */
    merged(): boolean;

    /**
      * String
      *
      * @returns {string}
      */
    mergedAt(): string;

    /**
      * mergedBy - PullRequest -> GitHubId
      *
      * @returns {GitHubId}
      */
    mergedBy(): GitHubId;

    /**
      * String
      *
      * @returns {string}
      */
    number(): string;

    /**
      * on - PullRequest -> Repo
      *
      * @returns {Repo}
      */
    on(): Repo;

    /**
      * String
      *
      * @returns {string}
      */
    state(): string;

    /**
      * String
      *
      * @returns {string}
      */
    timestamp(): string;

    /**
      * String
      *
      * @returns {string}
      */
    title(): string;

    /**
      * triggeredBuild - PullRequest -> Build
      *
      * @returns {Build[]}
      */
    triggeredBuild(): Build[];

    /**
      * String
      *
      * @returns {string}
      */
    updatedAt(): string;

}   

