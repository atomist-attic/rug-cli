/*
 * Copyright 2015-2017 Atomist Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import { GraphNode } from "@atomist/rug/tree/PathExpression";
import * as api from "../Person";
import { ChatId } from "./ChatId";
import { Email } from "./Email";
import { GitHubId } from "./GitHubId";
export { Person };

/*
 * Type Person
 * 
 * Generated class exposing Atomist Cortex.
 * Fluent builder style class for use in testing and query by example.
 */
class Person implements api.Person {

    private _forename: string;
    private _hasChatIdentity: ChatId;
    private _hasEmail: Email[];
    private _hasGithubIdentity: GitHubId;
    private _surname: string;

    nodeName(): string {
        return "Person";
    }

    nodeTags(): string[] {
        return [ "Person", "-dynamic" ];
    }

    /**
      * String
      *
      * @returns {string}
      */
    forename(): string {
        return this._forename;
    }

    withForename(forename: string): Person {
        this._forename = forename;
        return this;
    }

    /**
      * hasChatIdentity - Person -> ChatId
      *
      * @returns {ChatId}
      */
    hasChatIdentity(): ChatId {
        return this._hasChatIdentity;
    }

    withHasChatIdentity(hasChatIdentity: ChatId): Person {
        this._hasChatIdentity = hasChatIdentity;
        return this;
    }

    /**
      * hasEmail - Person -> Email
      *
      * @returns {Email[]}
      */
    hasEmail(): Email[] {
        return this._hasEmail;
    }

    withHasEmail(hasEmail: Email[]): Person {
        this._hasEmail = hasEmail;
        return this;
    }

    /**
      * hasGithubIdentity - Person -> GitHubId
      *
      * @returns {GitHubId}
      */
    hasGithubIdentity(): GitHubId {
        return this._hasGithubIdentity;
    }

    withHasGithubIdentity(hasGithubIdentity: GitHubId): Person {
        this._hasGithubIdentity = hasGithubIdentity;
        return this;
    }

    /**
      * String
      *
      * @returns {string}
      */
    surname(): string {
        return this._surname;
    }

    withSurname(surname: string): Person {
        this._surname = surname;
        return this;
    }

}   

