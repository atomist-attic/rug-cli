/*
 * Copyright 2015-2017 Atomist Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
"use strict";
/*
 * Type Stage
 *
 * Generated class exposing Atomist Cortex.
 * Fluent builder style class for use in testing and query by example.
 */
var Stage = (function () {
    function Stage() {
    }
    Stage.prototype.nodeName = function () {
        return "Stage";
    };
    Stage.prototype.nodeTags = function () {
        return ["Stage", "-dynamic"];
    };
    /**
      * String
      *
      * @returns {string}
      */
    Stage.prototype.endTime = function () {
        return this._endTime;
    };
    Stage.prototype.withEndTime = function (endTime) {
        this._endTime = endTime;
        return this;
    };
    /**
      * String
      *
      * @returns {string}
      */
    Stage.prototype.id = function () {
        return this._id;
    };
    Stage.prototype.withId = function (id) {
        this._id = id;
        return this;
    };
    /**
      * String
      *
      * @returns {string}
      */
    Stage.prototype.name = function () {
        return this._name;
    };
    Stage.prototype.withName = function (name) {
        this._name = name;
        return this;
    };
    /**
      * String
      *
      * @returns {string}
      */
    Stage.prototype.refId = function () {
        return this._refId;
    };
    Stage.prototype.withRefId = function (refId) {
        this._refId = refId;
        return this;
    };
    /**
      * String
      *
      * @returns {string}
      */
    Stage.prototype.startTime = function () {
        return this._startTime;
    };
    Stage.prototype.withStartTime = function (startTime) {
        this._startTime = startTime;
        return this;
    };
    /**
      * String
      *
      * @returns {string}
      */
    Stage.prototype.status = function () {
        return this._status;
    };
    Stage.prototype.withStatus = function (status) {
        this._status = status;
        return this;
    };
    /**
      * String
      *
      * @returns {string}
      */
    Stage.prototype.type = function () {
        return this._type;
    };
    Stage.prototype.withType = function (type) {
        this._type = type;
        return this;
    };
    return Stage;
}());
exports.Stage = Stage;
